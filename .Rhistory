length.rows  <- length(ranges(test.gr))
count.olaps  <- countOverlaps(test.gr, stand.gr, minoverlap=min.overlap)
length.olaps <- length(count.olaps[count.olaps!=0])
total.stand  <- length(ranges(stand.gr))
tp <- sum(count.olaps)
fp <- length.rows - length.olaps
##fp <- (length.rows - length.olaps)*median(count.olaps)
tn <- total.stand - tp
fn <- 0
acc <- (tp + tn) / (tp + fp + tn + fn)
return(acc)
}
min.olap.n <- median(end(standard.gr.n)-start(standard.gr.n))
acc.sesame.n  <- calc_acc(sesame.gr.n,  standard.gr.n, min.overlap=min.olap.n)
acc.hm450.n   <- calc_acc(hm450.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.champ.n   <- calc_acc(champ.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.epicopy.n <- calc_acc(epicopy.gr.n, standard.gr.n, min.overlap=min.olap.n)
min.olap.g <- median(end(standard.gr.g)-start(standard.gr.g))
acc.sesame.g  <- calc_acc(sesame.gr.g,  standard.gr.g,min.overlap=min.olap.g)
acc.hm450.g   <- calc_acc(hm450.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.champ.g   <- calc_acc(champ.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.epicopy.g <- calc_acc(epicopy.gr.g, standard.gr.g,min.overlap=min.olap.g)
calc_acc <- function(test.gr, stand.gr, min.overlap=1L){
length.rows  <- length(ranges(test.gr))
count.olaps  <- countOverlaps(test.gr, stand.gr, minoverlap=min.overlap)
length.olaps <- length(count.olaps[count.olaps!=0])
total.stand  <- length(ranges(stand.gr))
tp <- sum(count.olaps)
##fp <- length.rows - length.olaps
fp <- (length.rows - length.olaps)*median(count.olaps)
tn <- total.stand - tp
fn <- 0
acc <- (tp + tn) / (tp + fp + tn + fn)
return(acc)
}
min.olap.n <- median(end(standard.gr.n)-start(standard.gr.n))
acc.sesame.n  <- calc_acc(sesame.gr.n,  standard.gr.n, min.overlap=min.olap.n)
acc.hm450.n   <- calc_acc(hm450.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.champ.n   <- calc_acc(champ.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.epicopy.n <- calc_acc(epicopy.gr.n, standard.gr.n, min.overlap=min.olap.n)
min.olap.g <- median(end(standard.gr.g)-start(standard.gr.g))
acc.sesame.g  <- calc_acc(sesame.gr.g,  standard.gr.g,min.overlap=min.olap.g)
acc.hm450.g   <- calc_acc(hm450.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.champ.g   <- calc_acc(champ.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.epicopy.g <- calc_acc(epicopy.gr.g, standard.gr.g,min.overlap=min.olap.g)
acc.sesame.l  <- calc_acc(sesame.gr.l,  standard.gr.l)
acc.hm450.l   <- calc_acc(hm450.gr.l,   standard.gr.l)
acc.champ.l   <- calc_acc(champ.gr.l,   standard.gr.l)
calc_acc <- function(test.gr, stand.gr, min.overlap=1L){
length.rows  <- length(ranges(test.gr))
count.olaps  <- countOverlaps(test.gr, stand.gr, minoverlap=min.overlap)
length.olaps <- length(count.olaps[count.olaps!=0])
total.stand  <- length(ranges(stand.gr))
tp <- sum(count.olaps)
hist(count.olaps)
##fp <- length.rows - length.olaps
fp <- (length.rows - length.olaps)*median(count.olaps)
tn <- total.stand - tp
fn <- 0
acc <- (tp + tn) / (tp + fp + tn + fn)
return(acc)
}
min.olap.n <- median(end(standard.gr.n)-start(standard.gr.n))
acc.sesame.n  <- calc_acc(sesame.gr.n,  standard.gr.n, min.overlap=min.olap.n)
acc.hm450.n   <- calc_acc(hm450.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.champ.n   <- calc_acc(champ.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.epicopy.n <- calc_acc(epicopy.gr.n, standard.gr.n, min.overlap=min.olap.n)
min.olap.g <- median(end(standard.gr.g)-start(standard.gr.g))
acc.sesame.g  <- calc_acc(sesame.gr.g,  standard.gr.g,min.overlap=min.olap.g)
acc.hm450.g   <- calc_acc(hm450.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.champ.g   <- calc_acc(champ.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.epicopy.g <- calc_acc(epicopy.gr.g, standard.gr.g,min.overlap=min.olap.g)
acc.sesame.l  <- calc_acc(sesame.gr.l,  standard.gr.l)
acc.hm450.l   <- calc_acc(hm450.gr.l,   standard.gr.l)
acc.champ.l   <- calc_acc(champ.gr.l,   standard.gr.l)
acc.gain.l    <- calc_acc(epicopy.gr.l, standard.gr.l)
min.olap.g
min.olap.l <- median(end(standard.gr.l)-start(standard.gr.l))
acc.sesame.l  <- calc_acc(sesame.gr.l,  standard.gr.l, min.overlap = min.olap.l)
acc.hm450.l   <- calc_acc(hm450.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.champ.l   <- calc_acc(champ.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.gain.l    <- calc_acc(epicopy.gr.l, standard.gr.l, min.overlap = min.olap.l)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.sesame.n,
acc.sesame.n,
acc.sesame.n,
acc.sesame.g,
acc.sesame.g,
acc.sesame.g,
acc.sesame.g,
acc.sesame.l,
acc.sesame.l,
acc.sesame.l,
acc.sesame.l),
stringsAsFactors = FALSE)
hist(standard.n$End - standard.n$Start)
median(standard.n$End - standard.n$Start)
samples.names.df <- readxl::read_excel(path=paste0("G:\\My Drive\\dartmouth",
"\\salas_lab\\cnv\\",
"select_kidney_samples_cbioportal_vhl_01042021.xlsx"),
sheet = 1,
col_names = TRUE)
samples <- samples.names.df$sample
standard$Sample
samples
standard$Sample %in% samples
table(standard$Sample %in% samples)
table(standard$Sample
standard$Sample
samples
gsub(".*(?-){3}","",$standard$Sample, perl=TRUE)
gsub(".*(?-){3}","",standard$Sample, perl=TRUE)
gsub("-(?-){3}","",standard$Sample, perl=TRUE)
gsub("-(?!-){3}","",standard$Sample, perl=TRUE)
gsub("-(?-){3}","",standard$Sample, perl=TRUE)
gsub("(-){3}","",standard$Sample, perl=TRUE)
gsub("-{3}","",standard$Sample, perl=TRUE)
gsub("-{3}.*","",standard$Sample, perl=TRUE)
gsub("\-{3}.*","",standard$Sample, perl=TRUE)
gsub("\\-{3}.*","",standard$Sample, perl=TRUE)
gsub("^(?-(.+)){3}","",standard$Sample, perl=TRUE)
gsub("^(?\\-(.+)){3}","",standard$Sample, perl=TRUE)
gsub("^(?:-(.+)){3}","",standard$Sample, perl=TRUE)
gsub("^(?:-{3}.*","",standard$Sample, perl=TRUE)
gsub("^(?:-){3}.*","",standard$Sample, perl=TRUE)
gsub("^(?-){3}.*","",standard$Sample, perl=TRUE)
gsub("^(?=-){3}.*","",standard$Sample, perl=TRUE)
gsub("^(?=-){3}","",standard$Sample, perl=TRUE)
gsub("(?=-){3}","",standard$Sample, perl=TRUE)
gsub(".*(?=-){3}","",standard$Sample, perl=TRUE)
gsub(".*(?!=-){3}","",standard$Sample, perl=TRUE)
gsub(".*(!?=-){3}","",standard$Sample, perl=TRUE)
gsub(".*(?!-){3}","",standard$Sample, perl=TRUE)
gsub(".*(?!-)","",standard$Sample, perl=TRUE)
gsub(".*(?!-).*","",standard$Sample, perl=TRUE)
gsub(".*(!?-)","",standard$Sample, perl=TRUE)
gsub(".*(!?-){3}","",standard$Sample, perl=TRUE)
gsub(".*(!?-{3})","",standard$Sample, perl=TRUE)
gsub("-{3}(!?-)","",standard$Sample, perl=TRUE)
gsub(".*-{3}(!?-)","",standard$Sample, perl=TRUE)
gsub(".*(-){3}(!?-)","",standard$Sample, perl=TRUE)
gsub("(-){3}(!?-.*)","",standard$Sample, perl=TRUE)
gsub("(-){3}(?!-.*)","",standard$Sample, perl=TRUE)
gsub("(-){3}(?!-)","",standard$Sample, perl=TRUE)
gsub(".*-{3}(?!-.*)","",standard$Sample, perl=TRUE)
gsub("(.*-){3}(?!-.*)","",standard$Sample, perl=TRUE)
gsub("^(.*-){3}(?=-.*)","",standard$Sample, perl=TRUE)
gsub("(^.*-){3}(?=-.*)","",standard$Sample, perl=TRUE)
gsub("^.*-{3}(?=-.*)","",standard$Sample, perl=TRUE)
gsub("^(?:[^-]*-){3}([^-]*)","",standard$Sample, perl=TRUE)
gsub("^(?:[^-]*\-){3}([^-]*)","",standard$Sample, perl=TRUE)
gsub("^(?:[^-]*\\-){3}([^-]*)","",standard$Sample, perl=TRUE)
gsub("^(?![^-]*\\-){3}([^-]*)","",standard$Sample, perl=TRUE)
gsub("^(?![^-]*-){3}([^-]*)","",standard$Sample, perl=TRUE)
gsub("(?<=-){3}.*","",standard$Sample, perl=TRUE)
gsub("(?<=-{3}}.*","",standard$Sample, perl=TRUE)
gsub("(?<=-{3}).*","",standard$Sample, perl=TRUE)
gsub("(?<=-)[3].*","",standard$Sample, perl=TRUE)
gsub("(?<=-).*","",standard$Sample, perl=TRUE)
gsub("^.*-.*-.*-","",standard$Sample, perl=TRUE)
gsub("^\\w","",standard$Sample, perl=TRUE)
gsub("^(\\w.*-){3}","",standard$Sample, perl=TRUE)
gsub("^(\\w+-){3}","",standard$Sample, perl=TRUE)
gsub("(^\\w+-){3}","",standard$Sample, perl=TRUE)
gsub("^(\\w+-){3}","",standard$Sample, perl=TRUE)
samples %in% standard$Sample
gsub("((.*?-){3})","",standard$Sample, perl=TRUE)
gsub("(([^-]*-){3})","",standard$Sample, perl=TRUE)
gsub("(([^-]*-){3})","",standard$Sample)
gsub("[^-]*-{3})","",standard$Sample)
gsub("^([^-]*.[^-]*):.*$","",standard$Sample)
gsub("^([^-]*.[^-]*)-.*$","",standard$Sample)
gsub("^([^-]*.[^-]*)-.*$","",standard$Sample,perl=TRUE)
gsub("^([\\w-]{3})","",standard$Sample,perl=TRUE)
gsub("^([\\w+-]{3})","",standard$Sample,perl=TRUE)
gsub("^(\\w+{-]{3})","",standard$Sample,perl=TRUE)
gsub("^(\\w+[-]{3})","",standard$Sample,perl=TRUE)
gsub("^[-]{3})","",standard$Sample,perl=TRUE)
gsub("^[-]{3}","",standard$Sample,perl=TRUE)
gsub("^[-]{3}","",standard$Sample,perl=TRUE)
gsub("^[-]{3}", "", standard$Sample,perl=TRUE)
gsub("^((.*?-){2}.*?)-.*", "", standard$Sample,perl=TRUE)
gsub("^([^-]+-[^-]+).*", "", standard$Sample,perl=TRUE)
str_after_nth(standard$Sample,"-", n=3)
BiocManager::install("strex")
library(strex)
library(strex)
str_after_nth(standard$Sample,"-", n=3)
?str_after_nth
str_before_nth(standard$Sample,"-", n=3)
str_before_nth(standard$Sample,"-", n=3) %in% samples
table(str_before_nth(standard$Sample,"-", n=3) %in% samples)
table(str_before_nth(standard$Sample,"-", n=3) %in% samples)
standard[str_before_nth(standard$Sample,"-", n=3) %in% samples,]
standard <- standard[str_before_nth(standard$Sample,"-", n=3) %in% samples,]
standard.n <- subset(standard, state==2)
standard.g <- subset(standard, state==3)
standard.l <- subset(standard, state==1)
sesame.n <- subset(mm.output.sesame, state==2)
sesame.g <- subset(mm.output.sesame, state==3)
sesame.l <- subset(mm.output.sesame, state==1)
hm450.n <- subset(mm.output.hm450, state==2)
hm450.g <- subset(mm.output.hm450, state==3)
hm450.l <- subset(mm.output.hm450, state==1)
champ.n <- subset(mm.output.champ, state==2)
champ.g <- subset(mm.output.champ, state==3)
champ.l <- subset(mm.output.champ, state==1)
epicopy.n <- subset(mm.output.epicopy, state==2)
epicopy.g <- subset(mm.output.epicopy, state==3)
epicopy.l <- subset(mm.output.epicopy, state==1)
##Neutral
standard.gr.n <-
makeGRangesFromDataFrame(df=standard.n,  keep.extra.columns=TRUE)
sesame.gr.n <-
makeGRangesFromDataFrame(df=sesame.n,  keep.extra.columns=TRUE)
hm450.gr.n <-
makeGRangesFromDataFrame(df=hm450.n,   keep.extra.columns=TRUE)
champ.gr.n <-
makeGRangesFromDataFrame(df=champ.n,   keep.extra.columns=TRUE)
epicopy.gr.n <-
makeGRangesFromDataFrame(df=epicopy.n, keep.extra.columns=TRUE)
ssv.olaps.n <- seqsetvis::ssvOverlapIntervalSets(list(standard=standard.gr.n,
sesame=sesame.gr.n,
hm450=hm450.gr.n,
champ=champ.gr.n,
epicopy=epicopy.gr.n))
seqsetvis::ssvFeatureEuler(ssv.olaps.n) +
ggtitle("Copy Number Neutral Overlaps") +
theme(plot.title = element_text(hjust=0.5))
##gain
standard.gr.g <-
makeGRangesFromDataFrame(df=standard.g, keep.extra.columns=TRUE)
sesame.gr.g <-
makeGRangesFromDataFrame(df=sesame.g,   keep.extra.columns=TRUE)
hm450.gr.g <-
makeGRangesFromDataFrame(df=hm450.g,    keep.extra.columns=TRUE)
champ.gr.g <-
makeGRangesFromDataFrame(df=champ.g,    keep.extra.columns=TRUE)
epicopy.gr.g <-
makeGRangesFromDataFrame(df=epicopy.g,  keep.extra.columns=TRUE)
ssv.olaps.g <- seqsetvis::ssvOverlapIntervalSets(list(standard=standard.gr.g,
sesame=sesame.gr.g,
hm450=hm450.gr.g,
champ=champ.gr.g,
epicopy=epicopy.gr.g))
seqsetvis::ssvFeatureEuler(ssv.olaps.g) +
ggtitle("Copy Number Gain Overlaps") +
theme(plot.title = element_text(hjust=0.5))
##loss
standard.gr.l <-
makeGRangesFromDataFrame(df=standard.l,  keep.extra.columns=TRUE)
sesame.gr.l <-
makeGRangesFromDataFrame(df=sesame.l,  keep.extra.columns=TRUE)
hm450.gr.l <-
makeGRangesFromDataFrame(df=hm450.l,   keep.extra.columns=TRUE)
champ.gr.l <-
makeGRangesFromDataFrame(df=champ.l,   keep.extra.columns=TRUE)
epicopy.gr.l <-
makeGRangesFromDataFrame(df=epicopy.l, keep.extra.columns=TRUE)
ssv.olaps.l <- seqsetvis::ssvOverlapIntervalSets(list(standard=standard.gr.l,
sesame=sesame.gr.l,
hm450=hm450.gr.l,
champ=champ.gr.l,
epicopy=epicopy.gr.l))
seqsetvis::ssvFeatureEuler(ssv.olaps.l) +
ggtitle("Copy Number Loss Overlaps") +
theme(plot.title = element_text(hjust=0.5))
calc_acc <- function(test.gr, stand.gr, min.overlap=1L){
length.rows  <- length(ranges(test.gr))
count.olaps  <- countOverlaps(test.gr, stand.gr, minoverlap=min.overlap)
length.olaps <- length(count.olaps[count.olaps!=0])
total.stand  <- length(ranges(stand.gr))
tp <- sum(count.olaps)
hist(count.olaps)
##fp <- length.rows - length.olaps
fp <- (length.rows - length.olaps)*median(count.olaps)
tn <- total.stand - tp
fn <- 0
acc <- (tp + tn) / (tp + fp + tn + fn)
return(acc)
}
min.olap.n <- median(end(standard.gr.n)-start(standard.gr.n))
acc.sesame.n  <- calc_acc(sesame.gr.n,  standard.gr.n, min.overlap=min.olap.n)
acc.hm450.n   <- calc_acc(hm450.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.champ.n   <- calc_acc(champ.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.epicopy.n <- calc_acc(epicopy.gr.n, standard.gr.n, min.overlap=min.olap.n)
min.olap.g <- median(end(standard.gr.g)-start(standard.gr.g))
acc.sesame.g  <- calc_acc(sesame.gr.g,  standard.gr.g,min.overlap=min.olap.g)
acc.hm450.g   <- calc_acc(hm450.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.champ.g   <- calc_acc(champ.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.epicopy.g <- calc_acc(epicopy.gr.g, standard.gr.g,min.overlap=min.olap.g)
min.olap.l <- median(end(standard.gr.l)-start(standard.gr.l))
acc.sesame.l  <- calc_acc(sesame.gr.l,  standard.gr.l, min.overlap = min.olap.l)
acc.hm450.l   <- calc_acc(hm450.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.champ.l   <- calc_acc(champ.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.gain.l    <- calc_acc(epicopy.gr.l, standard.gr.l, min.overlap = min.olap.l)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.sesame.n,
acc.sesame.n,
acc.sesame.n,
acc.sesame.g,
acc.sesame.g,
acc.sesame.g,
acc.sesame.g,
acc.sesame.l,
acc.sesame.l,
acc.sesame.l,
acc.sesame.l),
stringsAsFactors = FALSE)
View(acc.df)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.hm450.n,
acc.champ.n,
acc.epicopy.n,
acc.sesame.g,
acc.hm450.g,
acc.champ.g,
acc.epicopy.g,
acc.sesame.l,
acc.hm450.l,
acc.champ.l,
acc.epicopy.l),
stringsAsFactors = FALSE)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.hm450.n,
acc.champ.n,
acc.epicopy.n,
acc.sesame.g,
acc.hm450.g,
acc.champ.g,
acc.epicopy.g,
acc.sesame.l,
acc.hm450.l,
acc.champ.l,
acc.epicopy.l),
stringsAsFactors = FALSE)
write.table(acc.df)
View(acc.df)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.hm450.n,
acc.champ.n,
acc.epicopy.n,
acc.sesame.g,
acc.hm450.g,
acc.champ.g,
acc.epicopy.g,
acc.sesame.l,
acc.hm450.l,
acc.champ.l,
acc.epicopy.l),
stringsAsFactors = FALSE)
min.olap.n <- median(end(standard.gr.n)-start(standard.gr.n))
acc.sesame.n  <- calc_acc(sesame.gr.n,  standard.gr.n, min.overlap=min.olap.n)
acc.hm450.n   <- calc_acc(hm450.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.champ.n   <- calc_acc(champ.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.epicopy.n <- calc_acc(epicopy.gr.n, standard.gr.n, min.overlap=min.olap.n)
min.olap.g    <- median(end(standard.gr.g)-start(standard.gr.g))
acc.sesame.g  <- calc_acc(sesame.gr.g,  standard.gr.g,min.overlap=min.olap.g)
acc.hm450.g   <- calc_acc(hm450.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.champ.g   <- calc_acc(champ.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.epicopy.g <- calc_acc(epicopy.gr.g, standard.gr.g,min.overlap=min.olap.g)
min.olap.l    <- median(end(standard.gr.l)-start(standard.gr.l))
acc.sesame.l  <- calc_acc(sesame.gr.l,  standard.gr.l, min.overlap = min.olap.l)
acc.hm450.l   <- calc_acc(hm450.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.champ.l   <- calc_acc(champ.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.epicopy.l <- calc_acc(epicopy.gr.l, standard.gr.l, min.overlap = min.olap.l)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.hm450.n,
acc.champ.n,
acc.epicopy.n,
acc.sesame.g,
acc.hm450.g,
acc.champ.g,
acc.epicopy.g,
acc.sesame.l,
acc.hm450.l,
acc.champ.l,
acc.epicopy.l),
stringsAsFactors = FALSE)
View(acc.df)
total.standard <- nrow(standard)
total.standard.n <- nrow(standard.n)
total.standard.n <- nrow(standard.n)
total.standard.g <- nrow(standard.g)
total.standard.l <- nrow(standard.l)
calc_acc <- function(test.gr, stand.gr, min.overlap=1L){
length.rows  <- length(ranges(test.gr))
count.olaps  <- countOverlaps(test.gr, stand.gr, minoverlap=min.overlap)
length.olaps <- length(count.olaps[count.olaps!=0])
total.stand  <- length(ranges(stand.gr))
tp <- sum(count.olaps)
hist(count.olaps)
fp <- length.rows - length.olaps
##fp <- (length.rows - length.olaps)*median(count.olaps)
tn <- total.stand - tp
fn <- 0
acc <- (tp + tn) / (tp + fp + tn + fn)
return(acc)
}
min.olap.n <- median(end(standard.gr.n)-start(standard.gr.n))
acc.sesame.n  <- calc_acc(sesame.gr.n,  standard.gr.n, min.overlap=min.olap.n)
acc.hm450.n   <- calc_acc(hm450.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.champ.n   <- calc_acc(champ.gr.n,   standard.gr.n, min.overlap=min.olap.n)
acc.epicopy.n <- calc_acc(epicopy.gr.n, standard.gr.n, min.overlap=min.olap.n)
min.olap.g    <- median(end(standard.gr.g)-start(standard.gr.g))
acc.sesame.g  <- calc_acc(sesame.gr.g,  standard.gr.g,min.overlap=min.olap.g)
acc.hm450.g   <- calc_acc(hm450.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.champ.g   <- calc_acc(champ.gr.g,   standard.gr.g,min.overlap=min.olap.g)
acc.epicopy.g <- calc_acc(epicopy.gr.g, standard.gr.g,min.overlap=min.olap.g)
min.olap.l    <- median(end(standard.gr.l)-start(standard.gr.l))
acc.sesame.l  <- calc_acc(sesame.gr.l,  standard.gr.l, min.overlap = min.olap.l)
acc.hm450.l   <- calc_acc(hm450.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.champ.l   <- calc_acc(champ.gr.l,   standard.gr.l, min.overlap = min.olap.l)
acc.epicopy.l <- calc_acc(epicopy.gr.l, standard.gr.l, min.overlap = min.olap.l)
acc.df <- data.frame(test=c("sesame_neutral",
"hm450_neutral",
"champ_neurtal",
"epicopy_neutral",
"sesame_gain",
"hm450_gain",
"champ_gain",
"epicopy_gain",
"sesame_loss",
"hm450_loss",
"champ_loss",
"epicopy_loss"),
accuracy=c(acc.sesame.n,
acc.hm450.n,
acc.champ.n,
acc.epicopy.n,
acc.sesame.g,
acc.hm450.g,
acc.champ.g,
acc.epicopy.g,
acc.sesame.l,
acc.hm450.l,
acc.champ.l,
acc.epicopy.l),
stringsAsFactors = FALSE)
View(acc.df)
