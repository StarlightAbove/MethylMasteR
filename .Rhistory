annotations.file <-
paste0(work.dir,
file.sep,
"infercnv_sample_annotation_file.txt")
gene.order.file <-
paste0("/dartfs/rc/lab/S/SalasLab",
"/CCRCC_sc/Raw_data/",
"gencode_v21_gen_pos.complete.txt")
}else{
work.dir <-
paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\sc",
"\\single_cell_mo")
file.sep <- "\\\\"
annotations.file <-
paste0(work.dir,file.sep,"infercnv_sample_annotation_file.txt")
gene.order.file <-
"C:\\Users\\Mike\\Desktop\\gencode_v21_gen_pos.complete.txt"
}
##run.discovery==TRUE
run.discovery==FALSE
if(run.discovery==TRUE){
args <- commandArgs(trailingOnly = TRUE)
.libPaths("/dartfs/rc/lab/S/SalasLab/R/x86_64-pc-linux-gnu-library/4.0")
work.dir <- args[1]
file.sep <- "/"
annotations.file <-
paste0(work.dir,
file.sep,
"infercnv_sample_annotation_file.txt")
gene.order.file <-
paste0("/dartfs/rc/lab/S/SalasLab",
"/CCRCC_sc/Raw_data/",
"gencode_v21_gen_pos.complete.txt")
}else{
work.dir <-
paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\sc",
"\\single_cell_mo")
file.sep <- "\\\\"
annotations.file <-
paste0(work.dir,file.sep,"infercnv_sample_annotation_file.txt")
gene.order.file <-
"C:\\Users\\Mike\\Desktop\\gencode_v21_gen_pos.complete.txt"
}
##run.discovery<-TRUE
run.discovery<-FALSE
if(run.discovery==TRUE){
args <- commandArgs(trailingOnly = TRUE)
.libPaths("/dartfs/rc/lab/S/SalasLab/R/x86_64-pc-linux-gnu-library/4.0")
work.dir <- args[1]
file.sep <- "/"
annotations.file <-
paste0(work.dir,
file.sep,
"infercnv_sample_annotation_file.txt")
gene.order.file <-
paste0("/dartfs/rc/lab/S/SalasLab",
"/CCRCC_sc/Raw_data/",
"gencode_v21_gen_pos.complete.txt")
}else{
work.dir <-
paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\sc",
"\\single_cell_mo")
file.sep <- "\\\\"
annotations.file <-
paste0(work.dir,file.sep,"infercnv_sample_annotation_file.txt")
gene.order.file <-
"C:\\Users\\Mike\\Desktop\\gencode_v21_gen_pos.complete.txt"
}
##Load my tumor MO data
load(paste0(work.dir,
file.sep,
"mo.obj.filt.norm.RData"))
library(Matrix)
library(infercnv)
##run.discovery<-TRUE
run.discovery<-FALSE
if(run.discovery==TRUE){
args <- commandArgs(trailingOnly = TRUE)
.libPaths("/dartfs/rc/lab/S/SalasLab/R/x86_64-pc-linux-gnu-library/4.0")
work.dir <- args[1]
file.sep <- "/"
annotations.file <-
paste0(work.dir,
file.sep,
"infercnv_sample_annotation_file.txt")
gene.order.file <-
paste0("/dartfs/rc/lab/S/SalasLab",
"/CCRCC_sc/Raw_data/",
"gencode_v21_gen_pos.complete.txt")
}else{
work.dir <-
paste0("G:\\My Drive\\dartmouth\\salas_lab\\sc\\sc\\single_cell_mo")
file.sep <- "\\\\"
annotations.file <-
paste0(work.dir,
.Platform$file.sep,
"infercnv_sample_annotation_file.txt")
gene.order.file <-
paste0(work.dir,
.Platform$file.sep,
"gencode_v21_gen_pos.complete.txt")
}
library(devtools)
devtools::install_github("https:/github.com/mmariani123/MethylMasteR", upgrade = "never", lib ="C:\\Users\\Mike\Desktop\\methyl_master_r_lib")
devtools::install_github("https:/github.com/mmariani123/MethylMasteR", upgrade = "never", lib ="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
devtools::install_github("https:/github.com/mmariani123/MethylMasteR", upgrade = "never", libs ="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
devtools::install_github("mmariani123/MethylMasteR", upgrade = "never", libs ="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
devtools::install_github("mmariani123/MethylMasteR", upgrade = "never", lib ="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
devtools::install_github("mmariani123/MethylMasteR", upgrade = "never", lib ="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
library(MethylMasteR)
devtools::test()
Then devtools:::find_test_file()
devtools:::find_test_file()
devtools:::find_active_file()
devtools:::find_test_file("C:/Users/Mike/Desktop/github/MethylMasteR/tests/testthat/test-mm_testing.R")
find_test_file
devtools:::find_test_file
edit(find_test_file.R)
edit(active.R)
Go to file/fins_test_file
getAnywhere(x="find_test_file")
getAnywhere(x="devtools")
getAnywhere(x="namespace:devtools")
trace(find_test_file)
trace(active.R)
trace(find_test_file, edit=TRUE)
trace(find_test_file(), edit=TRUE)
trace(devtools::find_test_file(), edit=TRUE)
trace(devtools::find_test_file, edit=TRUE)
trace(devtools:::find_test_file, edit=TRUE)
devtools::test()
devtools::test()
?system.file
devtools::test()
getwd()
devtools::test()
output.dir <- system.file("test",
package = 'MethylMasteR')
output.dir
system.file("data",
package = 'MethylMasteR')
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
setClass("methylMaster",
representation(Sample_ID  = "character",
chrom      = "character",
loc.start  = "integer",
loc.end    = "integer",
num.mark   = "integer",
bstat      = "numeric",
seg.mean   = "numeric",
seg.median = "numeric",
pval       = "numeric",
state      = "integer",
treatment  = "character",
method     = "character",
sub.method = "character"),
prototype(Sample_ID = NA_character_,
loc.start = NA_real_),
contains=NULL ##Inherits from
)
setClass("methylMaster",
representation(Sample_ID  = "character",
chrom      = "character",
loc.start  = "integer",
loc.end    = "integer",
num.mark   = "integer",
bstat      = "numeric",
seg.mean   = "numeric",
seg.median = "numeric",
pval       = "numeric",
state      = "integer",
treatment  = "character",
method     = "character",
sub.method = "character"),
prototype(Sample_ID = NA_character_,
loc.start = NA_integer_),
contains=NULL ##Inherits from
)
mmo <- new("methylMaster",
Sample_ID  = "test_sample",
chrom      = 1,
loc.start  = 1,
loc.end    = 1e6,
num.mark   = 1e3,
bstat      = 0.04,
seg.mean   = 0.31,
seg.median = 0.25,
pval       = 0.04,
state      = 3,
treatment  = "tumor",
method     = "custom",
sub.method = ""),
##Note that Unlike S3, S4 checks that
##all of the slots have the correct type:
##To access slots of an S4 object you use @, not $:
mmo@Sample_ID
mmo <- new("methylMaster",
Sample_ID  = "test_sample",
chrom      = 1,
loc.start  = 1,
loc.end    = 1e6,
num.mark   = 1e3,
bstat      = 0.04,
seg.mean   = 0.31,
seg.median = 0.25,
pval       = 0.04,
state      = 3,
treatment  = "tumor",
method     = "custom",
sub.method = "")
mmo <- new("methylMaster",
Sample_ID  = "test_sample",
chrom      = 1L,
loc.start  = 1L,
loc.end    = 1e6L,
num.mark   = 1e3L,
bstat      = 0.04,
seg.mean   = 0.31,
seg.median = 0.25,
pval       = 0.04,
state      = 3L,
treatment  = "tumor",
method     = "custom",
sub.method = "")
mmo <- new("methylMaster",
Sample_ID  = "test_sample",
chrom      = "1",
loc.start  = 1L,
loc.end    = 1e6L,
num.mark   = 1e3L,
bstat      = 0.04,
seg.mean   = 0.31,
seg.median = 0.25,
pval       = 0.04,
state      = 3L,
treatment  = "tumor",
method     = "custom",
sub.method = "")
mmo@Sample_ID
slot(mmo, "Sample_ID")
mmo[["Sample_ID"]]
getSlots("mmo")
setClass("MethylMaster",
representation(Sample_ID  = "character",
chrom      = "character",
loc.start  = "integer",
loc.end    = "integer",
num.mark   = "integer",
bstat      = "numeric",
seg.mean   = "numeric",
seg.median = "numeric",
pval       = "numeric",
state      = "integer",
treatment  = "character",
method     = "character",
sub.method = "character"),
prototype(Sample_ID = NA_character_,
loc.start = NA_integer_),
contains=NULL ##Inherits from
)
mmo <- new("MethylMaster",
Sample_ID  = "test_sample",
chrom      = "1",
loc.start  = 1L,
loc.end    = 1e6L,
num.mark   = 1e3L,
bstat      = 0.04,
seg.mean   = 0.31,
seg.median = 0.25,
pval       = 0.04,
state      = 3L,
treatment  = "tumor",
method     = "custom",
sub.method = "")
mmo@Sample_ID
slot(mmo, "Sample_ID")
getSlots("MethylMaster")
?vapply
devtools::test()
devtools::load_all()
devtools::test()
typeof(grl)
methyl_master_population_ranges(grl,
##density=0.1,
##We can also like the density
##Jenn likes .01
ro.thresh       = 0.5,
density         = ov.overlap.density,
est.recur       = ov.estimate.recurrence
)
debug(methyl_master_population_ranges)
methyl_master_population_ranges(grl,
##density=0.1,
##We can also like the density
##Jenn likes .01
ro.thresh       = 0.5,
density         = ov.overlap.density,
est.recur       = ov.estimate.recurrence
)
methyl_master_population_ranges(grl,
##density=0.1,
##We can also like the density
##Jenn likes .01
ro.thresh       = 0.5,
density         = ov.overlap.density,
est.recur       = ov.estimate.recurrence
)
debug(.densityPopRanges)
methyl_master_population_ranges(grl,
##density=0.1,
##We can also like the density
##Jenn likes .01
ro.thresh       = 0.5,
density         = ov.overlap.density,
est.recur       = ov.estimate.recurrence
)
typeof(gr;)
typeof(grl)
methyl_master_population_ranges(grl,
##density=0.1,
##We can also like the density
##Jenn likes .01
ro.thresh       = 0.5,
density         = ov.overlap.density,
est.recur       = ov.estimate.recurrence
)
reduce(gr)
typeof(gr)
gr
unlist(gr)
typeof(grl)
devtools::load_all()
devtools::test()
methyl_master_population_ranges(grl,
##density=0.1,
##We can also like the density
##Jenn likes .01
ro.thresh       = 0.5,
density         = ov.overlap.density,
est.recur       = ov.estimate.recurrence
)
debug(methyl_master_population_ranges)
debug(.densityPopRanges)
?unlist
BiocGenerics::unlist(grl)
gr <- BiocGenerics::unlist(grl)
IRanges::unlist()
gr <- BiocGenerics::unlist(grl)
gr
typeof(grl)
is.list(grl)
BiocGenerics::reduce(grl)
BiocGenerics::Reduce(grl)
BiocGenerics::Reduce(gr)
biovizBase::flatGrl(grl)
?biovizBase::flatGrl
biovizBase::flatGrl(grl,indName = "Sample_ID")
gr$`6042324113_R05C02`
biovizBase::flatGrl(grl)
stack(grl)
library(GenomicRanges)
gr1 <- GRanges("chr1", IRanges(1:10, width = 5))
gr2 <- GRanges("chr2", IRanges(1:10, width = 5))
obj <- GRangesList(gr1, gr2)
values(obj) <- data.frame(a = 1:2, b = letters[1:2])
stack(obj)
flatGrl(obj)
do.call(rbind,grl)
do.call(c,grl)
do.call(unlist,grl)
do.call(rbind,unlist(grl))
GenomicRanges::bindAsGRanges(grl)
GenomicRanges::bindROWS(grl)
?GenomicRanges::merge
??GenomicRanges::merge
do.call(GenomicRanges::merge,grl)
do.call(GenomicRanges::merge,grl)
GenomicRanges::unlist()
GenomicRanges:::unlist()
GenomicRanges:::unlist(grl)
base::unlist(grl)
S4Vectors::unlist()
S4Vectors:::unlist()
View(gr1)
obj
unlist(obj)
gr1
GenomicRangesList(grl)
GRangesList(grl)
GRangesList(grl) %>% unlist()
grl$`6042324113_R05C02`
unlist(GRangesList(grl))
?GRangesList
unlist(GenomicRanges::GRangesList(grl))
devtools::load_all()
devtools::test()
.libPaths()
.libPaths() <- ""
.libPaths()
?.libPaths()
package.version("GenomicRanges")
packageVersion("GenomicRanges")
devtools::load_all()
devtools::test()
?BiocManager::install
?install.packages
?BiocManager::install
?install.packages
BiocManager::install(data.table,
version = "1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
BiocManager::install("data.table",
version = "1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
devtools::load_all()
BiocManager::install("data.table",
version = "1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
install.packages(data.table,
version="1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
install.packages("data.table",
version="1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
install.packages("data.table", version = "1.9.4", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE)
install.packages("data.table", version = "1.9.4", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE)
?install.packages
install.packages("data.table",
version="1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
install.packages("data.table", version = "1.9.4", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE)
install.packages("data.table",
version="1.9.4",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("data.table", version = "1.9.4", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats",
version = "1.16.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats", version = "1.16.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
detach("package:stats", unload=TRUE)
install.packages("stats",
version = "1.16.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats",
version = "1.16.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats", version = "1.16.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats", version = "1.16.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats", version = "1.16.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
rm(list=ls())
install.packages("stats",
version = "1.16.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats", version = "1.16.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
rm(list=ls())
detach("package:stats", unload = TRUE)
install.packages("stats",
version = "1.16.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("stats", version = "1.16.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
BiocManager::install("ChAMP",
version = "2.20.1",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE)
BiocManager::install("limma",
version = "3.46.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("limma",
version = "3.46.0",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("limma", version = "3.46.0", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
packageVersion("limma")
packageVersion("ChAMP")
packageVersion("org.Hs.eg.db")
install.packages("shape",
version = "1.4.6",
lib="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib",
update=FALSE,
destdir="C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
install.packages("shape", version = "1.4.6", lib = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib", update = FALSE, destdir = "C:\\Users\\Mike\\Desktop\\methyl_master_r_lib")
?devtools::install_github
