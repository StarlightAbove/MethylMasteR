champ.padj           = 0.05,
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path, ##Needed for hm450
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE,
compare.list.files   = FALSE,
compare.files.in     = compare.files.in,
compare.names        = compare.names,
compare.olaps.size   = 1 ##Overlap of one or more base pairs
##considered
)
sesame.ref.version
foreach(i = 1:length(names(sesame_sset))) %do% {
sesame::cnSegmentation(sesame_sset[[i]],
sesame_ssets_normal,
refversion = sesame.ref.version)
}
devtools::load_all()
input.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_cbio_3p_select"
output.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_3p_hm450_internal_mean_correct"
sample.sheet.path <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\Sample_Sheet_kirc_cbio_3p.csv"
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab\\working\\cnv",
"\\cnv_testing",
"\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = input.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 1,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = TRUE, ##Only works for routine sesame
routine              = "hm450",
reference            = "internal", ##"comparison" or 'internal"
reference.name       = NA, ##NA for median, "all" For epicopy use,
##see below notes
split.by             = NULL, ##NULL ##gender_reported
##For splitting analysis across two factors
##in a field, note MethylMaster only
##supports splitting on a signal metadata
##containing ONLY two factors currently
##e.g. 'male' and 'female' in the
##'gender_reported' field
comparison           = c("tumor","cord"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
hm450.run.mean.correct = TRUE,
hm450.anno.file.path = hm450.anno.file.path, ##Needed for hm450
champ.padj           = 0.05,
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE,
compare.list.files   = FALSE,
compare.files.in     = compare.files.in,
compare.names        = compare.names,
compare.olaps.size   = 1 ##Overlap of one or more base pairs
##considered
)
############################## debug hm450 #################################
##debug(methyl_master)
debug(methyl_master_hm450)
input.dir <- paste0("G:\\My Drive\\dartmouth\\salas_lab",
"\\working\\cnv\\cnv_testing",
"\\sesame_combined_results")
inpiut.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab\\working\\cnv",
"\\cnv_testing",
"\\data\\blca_idat_files_pooled")
input.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_cbio_3p_select"
output.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_3p_hm450_internal_mean_correct"
sample.sheet.path <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\Sample_Sheet_kirc_cbio_3p.csv"
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab\\working\\cnv",
"\\cnv_testing",
"\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = input.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 1,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = TRUE, ##Only works for routine sesame
routine              = "hm450",
reference            = "internal", ##"comparison" or 'internal"
reference.name       = NA, ##NA for median, "all" For epicopy use,
##see below notes
split.by             = NULL, ##NULL ##gender_reported
##For splitting analysis across two factors
##in a field, note MethylMaster only
##supports splitting on a signal metadata
##containing ONLY two factors currently
##e.g. 'male' and 'female' in the
##'gender_reported' field
comparison           = c("tumor","cord"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
hm450.run.mean.correct = TRUE,
hm450.anno.file.path = hm450.anno.file.path, ##Needed for hm450
champ.padj           = 0.05,
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE,
compare.list.files   = FALSE,
compare.files.in     = compare.files.in,
compare.names        = compare.names,
compare.olaps.size   = 1 ##Overlap of one or more base pairs
##considered
)
candidates_data_treatment_B <-
CopyNumber450kCancer::AutoCorrectPeak(candidates_data_treatment_B)
hm450.run.mean.correct
?CopyNumber450kCancer::AutoCorrectPeak
colnames(candidates_data_treatment_B)
devtools::load_all()
devtools::load_all()
library(plyr)
library(dplyr)
library(data.table)
library(reshape2)
library(xlsx)
library(ggplot2)
library(purrr)
library(DESeq2)
library(WGCNA)
library(VennDiagram)
library(scales)
library(Hmisc)
library(bigmemory)
library(bigmemoryExt) ##"for bm cbind"
show_col(hue_pal()(10))
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
make_module_heatmap <- function(module_name,
expression_mat = normalized_counts,
metadata_df = sub.meta.data.nd,
gene_module_key_df = gene_module_key,
module_eigengenes_df = module_eigengenes) {
## "Create a summary heatmap of a given module.
##
## Args:
## module_name: a character indicating what module
## should be plotted, e.g. "ME19"
## expression_mat: The full gene expression matrix.
## Default is `normalized_counts`.
## metadata_df: a data frame with
## refinebio_accession_code and time_point
##              as columns. Default is `metadata`.
## gene_module_key: a data.frame indicating
## what genes are a part of what modules.
## Default is `gene_module_key`.
## module_eigengenes: a sample x eigengene data.
## frame with samples as row names. Default is
## `module_eigengenes`. "
## "Returns:
## A heatmap of expression matrix for a
## module's genes, with a barplot of the
## eigengene expression for that module.
## Set up the module eigengene with its
## refinebio_accession_code
module_eigengene <- module_eigengenes_df %>%
dplyr::select(all_of(module_name)) %>%
tibble::rownames_to_column("Sample")
## "Set up column annotation from metadata"
col_annot_df <- metadata_df %>%
## "Only select the treatment and sample ID columns"
dplyr::select(Sample,
Condition) %>%
## "Add on the eigengene expression
## by joining with sample IDs"
dplyr::inner_join(module_eigengene,
by = "Sample") %>%
## "Arrange by patient and time point"
dplyr::arrange(Condition, Sample) %>%
## "Store sample"
tibble::column_to_rownames("Sample")
## "Create the ComplexHeatmap column annotation object"
col_annot <- ComplexHeatmap::HeatmapAnnotation(
## "Supply treatment labels"
Condition = col_annot_df$Condition,
## "Add annotation barplot"
module_eigengene = ComplexHeatmap::anno_barplot(dplyr::select(
col_annot_df, module_name)),
## "Pick colors for each experimental group in <Condition>"
col = list(Condition = c("Healthy" = gg_color_hue(6)[1],
"RA"      = gg_color_hue(6)[2],
"SjS"     = gg_color_hue(6)[3],
"SLE"     = gg_color_hue(6)[4],
"SSc"     = gg_color_hue(6)[5],
"T1D"     = gg_color_hue(6)[6]
)
)
)
## "Get a vector of the Ensembl gene IDs
## that correspond to this module"
module_genes <- gene_module_key_df %>%
dplyr::filter(module == module_name) %>%
dplyr::pull(gene)
## "Set up the gene expression data frame"
mod_mat <- expression_mat %>%
t() %>%
as.data.frame() %>%
## "Only keep genes from this module"
dplyr::filter(rownames(.) %in% module_genes) %>%
## "Order the samples to match col_annot_df"
dplyr::select(rownames(col_annot_df)) %>%
## "Data needs to be a matrix"
as.matrix()
## "Normalize the gene expression values"
mod_mat <- mod_mat %>%
## "Scale can work on matrices,
## but it does it by column so we will need to
## transpose first"
t() %>%
scale() %>%
## "And now we need to transpose back"
t()
## "Create a color function based on standardized scale"
color_func <- circlize::colorRamp2(
c(-2, 0, 2),
c("#67a9cf", "#f7f7f7", "#ef8a62")
)
## "Plot on a heatmap"
heatmap <- ComplexHeatmap::Heatmap(mod_mat,
name = module_name,
## "Supply color function"
col = color_func,
## "Supply column annotation"
bottom_annotation = col_annot,
## "We don't want to cluster samples"
cluster_columns = FALSE,
## "We don't need to show sample
## or gene labels"
show_row_names = FALSE,
show_column_names = FALSE
)
## "Return heatmap"
return(heatmap)
}
set.seed(seed=42)
#comp <- "salas"
comp <- "whitfield"
if(comp=="whitfield"){
file.sep <- "\\\\"
work.dir <- paste0("G:\\My Drive\\dartmouth\\whitfield_lab\\working",
"\\ai_meta_analysis\adex_asset_jerry_ssc_skin")
}else if(comp=="salas"){
file.sep <- "\\\\"
work.dir <- paste0("G:\\My Drive\\dartmouth",
"\\whitfield_lab_working",
"\\ai_meta_analysis")
}else{
stop("Error: you must choose a valid work computer")
}
setwd(work.dir)
asset.meta.data.test <-
readxl::read_xlsx(path=paste0(work.dir,
file.sep,
"..\\data\\ASSET samples LOG.xlsx"),
col_names = TRUE,
sheet = 1)
devtools::load_all()
############################ debug sesame ##################################
##debug(methyl_master)
debug(methyl_master_sesame)
input.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_cbio_3p_select"
output.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_3p_sesame_internal_mean_correct"
sample.sheet.path <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\Sample_Sheet_kirc_cbio_3p_small.csv"
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab\\working\\cnv",
"\\cnv_testing",
"\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = input.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 1,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = TRUE, ##Only works for routine sesame
routine              = "sesame",
reference            = "internal", ##"comparison" or 'internal"
reference.name       = NA, ##NA for median, "all" For epicopy use,
##see below notes
split.by             = NULL, ##NULL ##gender_reported
##For splitting analysis across two factors
##in a field, note MethylMaster only
##supports splitting on a signal metadata
##containing ONLY two factors currently
##e.g. 'male' and 'female' in the
##'gender_reported' field
comparison           = c("tumor","cord"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
sesame.hm450.mean.correct = TRUE,
hm450.workflow       = "B",
hm450.anno.file.path = hm450.anno.file.path, ##Needed for hm450
champ.padj           = 0.05,
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE,
compare.list.files   = FALSE,
compare.files.in     = compare.files.in,
compare.names        = compare.names,
compare.olaps.size   = 1 ##Overlap of one or more base pairs
##considered
)
devtools::load_all()
############################ debug sesame ##################################
##debug(methyl_master)
debug(methyl_master_sesame)
input.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_cbio_3p_select"
output.dir <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\kirc_3p_sesame_internal_mean_correct"
sample.sheet.path <-
"G:\\My Drive\\dartmouth\\salas_lab\\working\\cnv\\Sample_Sheet_kirc_cbio_3p_small.csv"
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab\\working\\cnv",
"\\cnv_testing",
"\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = input.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 1,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = TRUE, ##Only works for routine sesame
routine              = "sesame",
reference            = "internal", ##"comparison" or 'internal"
reference.name       = NA, ##NA for median, "all" For epicopy use,
##see below notes
split.by             = NULL, ##NULL ##gender_reported
##For splitting analysis across two factors
##in a field, note MethylMaster only
##supports splitting on a signal metadata
##containing ONLY two factors currently
##e.g. 'male' and 'female' in the
##'gender_reported' field
comparison           = c("tumor","cord"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
sesame.hm450.mean.correct = TRUE,
hm450.workflow       = "B",
hm450.anno.file.path = hm450.anno.file.path, ##Needed for hm450
champ.padj           = 0.05,
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE,
compare.list.files   = FALSE,
compare.files.in     = compare.files.in,
compare.names        = compare.names,
compare.olaps.size   = 1 ##Overlap of one or more base pairs
##considered
)
n
############################ debug sesame ##################################
##debug(methyl_master)
debug(methyl_master_sesame)
methyl_master(input.dir            = input.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 1,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = TRUE, ##Only works for routine sesame
routine              = "sesame",
reference            = "internal", ##"comparison" or 'internal"
reference.name       = NA, ##NA for median, "all" For epicopy use,
##see below notes
split.by             = NULL, ##NULL ##gender_reported
##For splitting analysis across two factors
##in a field, note MethylMaster only
##supports splitting on a signal metadata
##containing ONLY two factors currently
##e.g. 'male' and 'female' in the
##'gender_reported' field
comparison           = c("tumor","cord"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
sesame.hm450.mean.correct = TRUE,
hm450.workflow       = "B",
hm450.anno.file.path = hm450.anno.file.path, ##Needed for hm450
champ.padj           = 0.05,
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE,
compare.list.files   = FALSE,
compare.files.in     = compare.files.in,
compare.names        = compare.names,
compare.olaps.size   = 1 ##Overlap of one or more base pairs
##considered
)
?CopyNumber450kCancer::AutoCorrectPeak
?plotCNV
?PlotCNV
?CopyNumber450kCancer::AutoCorrectPeak
CopyNumber450kCancer::AutoCorrectPeak
