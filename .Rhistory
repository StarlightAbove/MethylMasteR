df
basenames
unique(dirname(df$Basename)
unique(dirname(df$Basename))
unique(dirname(df$Basename))
list.files(##path = dirname(file),
path = unique(dirname(df$Basename)),
recursive = recursive,
full.names = TRUE)
unique(dirname(df$Basename)
unique(dirname(df$Basename))
############################## debug epicopy ###############################
debug(methyl_master)
debug(methyl_master_epicopy)
##debug(Epicopy::epicopy)
##debug(readSheet.mm)
debug(methyl_master_formatting_epicopy)
idat.files.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\data\\blca_idat_files_pooled")
output.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\test_epicopy_internal")
sample.sheet.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing\\Sample_Sheet.csv")
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth\\salas_lab_working",
"\\cnv\\cnv_testing\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
allfiles
list.files(##path = dirname(file),
path = unique(dirname(df$Basename)),
recursive = recursive,
full.names = TRUE)
unique(dirname(df$Basename))
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
devtools::load_all()
############################## debug epicopy ###############################
debug(methyl_master)
debug(methyl_master_epicopy)
##debug(Epicopy::epicopy)
##debug(readSheet.mm)
debug(methyl_master_formatting_epicopy)
idat.files.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\data\\blca_idat_files_pooled")
output.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\test_epicopy_internal")
sample.sheet.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing\\Sample_Sheet.csv")
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth\\salas_lab_working",
"\\cnv\\cnv_testing\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
##debug(Epicopy::epicopy)
##debug(readSheet.mm)
debug(read.metharray.exp)
debug(methyl_master_formatting_epicopy)
idat.files.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\data\\blca_idat_files_pooled")
output.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\test_epicopy_internal")
sample.sheet.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing\\Sample_Sheet.csv")
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth\\salas_lab_working",
"\\cnv\\cnv_testing\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
library(EpicopyData)
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
ls(globalenv())
library(EpicopyData)
if (!"all.normals" %in% ls(globalenv()))
if (!"all.normals" %in% ls(globalenv())){}
!"all.normals" %in% ls(globalenv())
data("allNormals")
EpicopyData
library(EpicopyData)
EpicopyData::
?EpicopyData
data(all.normals)
BiocManager::install(EpicopyData)
BiocManager::install("EpicopyData")
BiocManager::install("EpicopyData", force=TRUE)
data("allNormals")
readRDA("C:\\Users\\Mike\\Desktop\\github\\MethylMasteR\\R\\allNormals.rda")
load("C:\\Users\\Mike\\Desktop\\github\\MethylMasteR\\R\\allNormals.rda")
path <- "C:\\Users\\Mike\\Desktop\\EpicopyData_1.0.1.tar.gz"
install.packages(path, repos = NULL, type = 'source')
detach("package:EpicopyData",unlink=TRUE)
detach("package:EpicopyData",unload=TRUE)
path <- "C:\\Users\\Mike\\Desktop\\EpicopyData_1.0.1.tar.gz"
install.packages(path, repos = NULL, type = 'source')
library(EpicopyData)
data("allNormals")
data("allNormals")
updateObject(data)
updateObject(EpicopyData)
library(EpicopyData)
updateObject(EpicopyData)
updateObject("allNormals")
data("AllNormals")
data("allNormals")
all.normals
updateObject(AllNormals)
updateObject(allNormals)
updateObject("allNormals")
data(allNormals)
allNormals <- updateObject(allNormals)
allNormals <- updateObject(all.normals)
allNormals <- updateObject("allNormals")
allNormals
library(EpicopyData)
data("allNormals")
all.normals <- updateObject(data("allNormals"))
pData(Normals)
pData(all.normals)
as.logical(Normals)
all.normals <- updateObject(data(allNormals))
devtools::load_all()
############################## debug epicopy ###############################
debug(methyl_master)
debug(methyl_master_epicopy)
##debug(Epicopy::epicopy)
##debug(readSheet.mm)
debug(read.metharray.exp)
debug(methyl_master_formatting_epicopy)
idat.files.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\data\\blca_idat_files_pooled")
output.dir <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing",
"\\test_epicopy_internal")
sample.sheet.path <- paste0("G:\\My Drive\\dartmouth",
"\\salas_lab_working\\cnv",
"\\cnv_testing\\Sample_Sheet.csv")
hm450.anno.file.path <- paste0("G:\\My Drive\\dartmouth\\salas_lab_working",
"\\cnv\\cnv_testing\\hm450.manifest.hg38.rda")
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
methyl_master(input.dir            = idat.files.dir,
output.dir           = output.dir,
sample.sheet.path    = sample.sheet.path,
r.lib.path           = .libPaths()[1],
file.sep             = "\\\\",
n.cores              = 8,
os.type              = "windows",
proj                 = "TCGA-BLCA",
visualize            = TRUE,
visualize.individual = FALSE, ##Only works for routine sesame
routine              = "epicopy",
reference            = "internal", ##"comparison"
reference.name       = "all", ##For epicopy use
split.by             = NULL, ##gender_reported
comparison           = c("tumor","normal"),
overlap.density      = 0.1,
sesame.data.cache    = "EPIC",
sesame.data.normal   = 'EPIC.5.normal',
sesame.ref.version   = "hg38",
hm450.workflow       = "B",
champ.control        = FALSE,
champ.run.combat     = FALSE,
champ.run.dmp        = FALSE, ##If only one pheno var must = FALSE
champ.run.dmr        = FALSE, ##If only one pheno var must = FALSE
champ.run.block      = FALSE, ##If only one pheno var must = FALSE
champ.run.gsea       = FALSE, ##Requires dmp and dmr results
champ.run.epimod     = FALSE, ##If only one pheno var must = FALSE
hm450.anno.file.path = hm450.anno.file.path,
epi.run.gistic       = TRUE,
save.seg             = TRUE,
olaps.split.field    = "Sample_ID",
estimate.recurrence  = TRUE,
ov.less.stringent.ra.setting = TRUE,
ov.pvalue            = 0.05,
ov.keep.extra.columns = TRUE,
simplify.reduce      = weightedmean,
create.dir           = TRUE
)
.Normals
Normals
pData(Normals)
libraryE(EpicopyData)
library(EpicopyData)
EpicopyData::
EpicopyData
if (!"all.normals" %in% ls(globalenv()))
if (!"all.normals" %in% ls(globalenv())){print("hello")}
if (!"all.normals" %in% ls(globalenv())){print("hello")}
if (!"all.normals" %in% ls(globalenv())){print("hello")}
all.normals <- updateObject(data("allNormals"))
all.normals <- updateObject("allNormals")
all.normals
all.normals <- updateObject(allNormals)
all.normals
data(AllNormals)
data(allNormals)
all.normals <- updateObject(allNormals)
updateObject(allNormals)
updateObject(allNormals, verbose=TRUE)
rm(allNormals)
all.normals <- updateObject(allNormals)
all.normals <- updateObject("allNormals")
all.normals
?data
